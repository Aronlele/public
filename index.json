[{"content":"---\r\n\r\n我像一个傻子似的\u003cbr/\u003e追着你 宠着你\u003cbr\u003e现实\u003cbr\u003e像一盆冰水\u003cbr\u003e狠狠地浇灌在了\u003cbr\u003e我高昂的头颅\u003cbr\u003e低下了\u003cbr\u003e认命了\u003cbr\u003e我终归抵抗不了\u003cbr\u003e命运之手\u003cbr\u003e一股挫败之情\u003cbr\u003e油然而生\u003cbr\u003e我是要坠落了吗\u003cbr\u003e不\u003cbr\u003e前方仍旧光明\u003cbr\u003e我头颅\u003cbr\u003e依旧高昂\u003cbr\u003e握不住的沙\u003cbr\u003e随风撒去\u003cbr\u003e让风擦拭我的眼泪\u003cbr\u003e带我远行\u003cbr\u003e终有一天\u003cbr\u003e在落日的余晖下\u003cbr\u003e佳人在侧\u003cbr\u003e\r\n","cover":"","link":"一段旅程.html","preview":"\u003cp\u003e我像一个傻子似的\u003cbr/\u003e追着你 宠着你\u003cbr/\u003e现实\u003c/p\u003e\n","title":"一段旅程"},{"content":"---\r\n\r\n静谧夜空\u003cbr/\u003e\r\n冷冷的风\u003cbr/\u003e\r\n窗外无比美丽的\u003cbr/\u003e\r\n城市灯火\u003cbr/\u003e\r\n想想你\u003cbr/\u003e\r\n想想我\u003cbr/\u003e\r\n不由莞尔一笑\u003cbr/\u003e\r\n或许\u003cbr/\u003e\r\n这是最好的喜欢\u003cbr/\u003e\r\n一切 一切\u003cbr/\u003e\r\n情绪波动\u003cbr/\u003e\r\n变得静如止水\u003cbr/\u003e\r\n爱你\u003cbr/\u003e","cover":"","link":"心静.html","preview":"\u003cp\u003e静谧夜空\u003cbr\u003e  冷冷的风\u003cbr\u003e  窗外无比美丽的\u003cbr\u003e  城市灯火\u003c/p\u003e\n","title":"心静"},{"content":"---\r\n\r\n\r\n\r\n### JSH系统工程相关笔记\r\n\r\n#### 一、JSH系统工程相关目录（开发常用）\r\n\r\n​\t\r\n\r\n|           工程名           |                备注                | 常用逻辑 |\r\n| :------------------------: | :--------------------------------: | :------: |\r\n|    ylh-cloud-goods-api     |   易理货Spring Cloud商品服务API    |          |\r\n|  ylh-cloud-goods-provider  | 易理货Spring Cloud商品服务provider |          |\r\n|   ylh-service-goods-api    |         易理货商品服务API          |          |\r\n| ylh-service-goods-provider |       易理货商品服务provider       |          |\r\n|      ylh-v2-web-goods      |     易理货二期商品模块web工程      |          |\r\n\r\n#### 二、git操作\r\n\r\n1. 切换分支-切到需要的分支，master（预生产上线）、dev（测试上线）\r\n\r\ngit co master/dev\r\n\r\n2. 在当前分支下，更新项目\r\n\r\ngit pull\r\n\r\n3. 拉取新的分支，进行准备开发\r\n\r\ngit co -b user/(任务T/事项M+了然bug号) 最新tag\r\n\r\n4. 开发完毕，进行所有添加、提交本地\r\n\r\ngit add -A\r\n\r\ngit commit -m \"任务T/事项M+了然bug号:完整的了然标题\"\r\n\r\n5. 提交远程change\r\n\r\ngit push origin HEAD:refs/for/(master/dev) ---根据具体情况提交\r\n\r\n\r\n\r\n#### 三、开发常用\r\n\r\n##### 1.常用小方法\r\n\r\n```\r\nStringUtils.isEmpty(storeCheckDto.getCodeOrName())//判空方法\r\n```\r\n\r\n```\r\nBeanUtils.copyProperties(s, param);//实体间属性复制（source，target）\r\n```\r\n\r\n```\r\nStringUtils.upperCase//转大写\r\n```\r\n\r\n```\r\n@CustomerPath//描述controller，用来说明伞下店\r\n```\r\n\r\n```\r\nprivate Logger logger = LoggerFactory.getLogger(getClass());//通用日志获取类\r\n```\r\n\r\n```\r\nLong memberId = LoginContextHelper.getShopMemberId();//理货商id\r\nLong customerId = LoginContextHelper.getUserMemberId();//伞下店客户id\r\n```\r\n\r\n```\r\nString date = LocalDate.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM\"));//当月时间\r\n```\r\n\r\n```\r\nList newList = monthModelTargetResult.getResult().stream()//实现流式分页\r\n    .skip(pager.getPageOffset())\r\n    .limit(monthModelTrackParam.getRows()).collect(toList());\r\npager.setRecords(newList);\r\npager.setTotalCount(monthModelTargetResult.getResult().size());\r\npager.setSuccess(true);\r\n```\r\n\r\n```\r\nCheckEmptyUtil.isNotEmpty(）//检查是否为不空\r\n```\r\n\r\n```\r\nif (StringUtils.isNotBlank(skuId)) {//判断字符串非空\r\n  param.put(SKU_ID, Long.valueOf(skuId));\r\n}\r\n```\r\n\r\n```\r\n//获取时间符合要求的促销\r\nredisDtoList = redisDtoList.stream().filter(dto -\u003e dto.getMarketingEndTime() != null\r\n    \u0026\u0026 (dto.getMarketingEndTime().getTime() - System.currentTimeMillis() \u003e= 0))\r\n    .collect(Collectors.toList());\r\n```\r\n\r\n```\r\n//排序\r\nCollections.sort(redisDtoList, Comparator\r\n    .comparing(MarketingCampaignRedisDto::getMarketingEndTime));\r\n```\r\n\r\n```\r\nList\u003cMarketingCampaignRedisDto\u003e list =//redis获取元素\r\n    JSONObject.parseArray(redis.opsForValue().get(key), MarketingCampaignRedisDto.class);\r\nredisDtoList.addAll(list);//集合添加集合\r\n```\r\n\r\n```\r\nsetScale(2,BigDecimal.ROUND_HALF_UP)//保留两位小数，四舍五入\r\n```\r\n\r\n##### 2.开发规范\r\n\r\n```\r\n/**\r\n * 会员目标型号追踪列表.   // . 代码检查格式必须 \r\n *                       //空行代码检查必须\r\n * @param  monthModelTrackParam monthModelTrackParam //javadoc 非空标志\r\n * @return\r\n */\r\n```\r\n\r\n##### 3.常用实现\r\n\r\n```\r\n@RequestMapping(\"/list\")\r\npublic ModelAndView customerList(MonthModelTrackParam monthModelTrackParam) {\r\n  ModelAndView mav = new ModelAndView();\r\n  mav.setViewName(\"salestarget/modelTargetTrackCustomer\");\r\n  return mav;\r\n}\r\n/**\r\n视图层，适用于列表和条件查询通用情况\r\n跳转链接，自动执行查询方法\r\n*/\r\n```\r\n\r\n```\r\n@RequestMapping(\"/query\")\r\n@ResponseBody\r\npublic ExecuteResult\u003cPager\u003cMmCustomerTrackDto\u003e\u003e customerQuery(\r\n    @RequestBody  MonthModelTrackParam monthModelTrackParam)\r\n    //最好的前后端实现返回方法\r\n    \r\n    \r\n    Pager pager = new Pager\u003c\u003e();\r\n    pager.setRows(monthModelTrackParam.getRows());\r\n    pager.setPage(monthModelTrackParam.getPage() == 0 ? 1 : monthModelTrackParam.getPage());\r\n    \r\n    \r\n    pager.setRecords(monthModelTargetResult.getResult());\r\n    pager.setTotalCount(monthModelTargetResult.getResult().size());\r\n    pager.setSuccess(true);\r\n    \r\n    // 返回信息\r\n    ExecuteResult\u003cPager\u003cMmCustomerTrackDto\u003e\u003e executeResult = new ExecuteResult\u003c\u003e();\r\n    executeResult.setResult(pager);\r\n    executeResult.setSuccess(true);\r\n    return executeResult;\r\n```\r\n\r\n```\r\n//Excel导出功能实现\r\n/**\r\n * 会员目标型号导出.\r\n *\r\n * @param  monthModelTrackParam response\r\n * @return\r\n */\r\n@RequestMapping(\"/import\")\r\npublic void customerImport(HttpServletResponse response,\r\n                           MonthModelTrackParam monthModelTrackParam) throws IOException {\r\n\r\n  Long memberId = LoginContextHelper.getShopMemberId();//理货商id\r\n  Long customerId = LoginContextHelper.getUserMemberId();//伞下店客户id\r\n  monthModelTrackParam.setMemberId(memberId);//设置理货商\r\n  monthModelTrackParam.setCustomerId(customerId);//设置伞下店\r\n  if (!\"\".equals(monthModelTrackParam.getStartMonth())\r\n      || monthModelTrackParam.getStartMonth() != null) {\r\n    monthModelTrackParam.setStartMonth(monthModelTrackParam.getStartMonth().replace(\"-\",\"\"));\r\n  }\r\n  if (!\"\".equals(monthModelTrackParam.getEndMonth())\r\n      || monthModelTrackParam.getEndMonth() != null) {\r\n    monthModelTrackParam.setEndMonth(monthModelTrackParam.getEndMonth().replace(\"-\",\"\"));\r\n  }\r\n\r\n  // 设置单元格内容\r\n  List\u003cString\u003e list = new ArrayList\u003c\u003e();\r\n  list.add(\"月份\");\r\n  list.add(\"产业\");\r\n  list.add(\"产品组\");\r\n  list.add(\"商品编码\");\r\n  list.add(\"商品型号\");\r\n  list.add(\"目标\");\r\n  list.add(\"实际\");\r\n  list.add(\"承接占比\");\r\n  // 创建excel的文档对象\r\n  XSSFWorkbook wkb = new XSSFWorkbook();\r\n  // 建立新的sheet对象（excel的表单）\r\n  Sheet sheet = wkb.createSheet(EXECL_TITLE);\r\n  Row row = sheet.createRow(0);\r\n  CellStyle cellStyle = wkb.createCellStyle();\r\n  cellStyle.setAlignment(HorizontalAlignment.CENTER); // 居中\r\n  cellStyle.setVerticalAlignment(VerticalAlignment.CENTER); // 垂直\r\n\r\n  Row row1 = sheet.createRow(1);\r\n  int count = 0;\r\n  for (int i = 0; i \u003c list.size(); i++) {\r\n\r\n    if (i \u003e= 7) {\r\n      Cell cell1 = row.createCell(i + 2);\r\n      sheet.addMergedRegion(new CellRangeAddress(0, 1, i + 2, i + 2));\r\n      cell1.setCellValue(list.get(i));\r\n      cell1.setCellStyle(cellStyle);\r\n    } else if (i \u003c 7 \u0026\u0026 i \u003e 4) {\r\n      Cell cell1 = row.createCell(5 + count * 2);\r\n      sheet.addMergedRegion(new CellRangeAddress(0, 0, 5 + count * 2, 6 + count * 2));\r\n      cell1.setCellValue(list.get(i));\r\n      cell1.setCellStyle(cellStyle);\r\n      // 第二行\r\n      row1.createCell(5 + count * 2).setCellValue(\"数量（台）\");\r\n      row1.createCell(6 + count * 2).setCellValue(\"金额（万元）\");\r\n      count++;\r\n    } else {\r\n      Cell cell1 = row.createCell(i);\r\n      sheet.addMergedRegion(new CellRangeAddress(0, 1, i, i));\r\n      cell1.setCellValue(list.get(i));\r\n      cell1.setCellStyle(cellStyle);\r\n    }\r\n  }\r\n  //伞下店目标型号查询\r\n  ExecuteResult\u003cList\u003cMmCustomerTrackDto\u003e\u003e monthModelTargetResult =\r\n      cusMonthModelTargetService.findCusMonthModelTarget(monthModelTrackParam);\r\n\r\n  if (monthModelTargetResult.isSuccess()) {\r\n    for (MmCustomerTrackDto dto: monthModelTargetResult.getResult()) {\r\n      dto.setTargetAmount(dto.getTargetAmount().divide(BigDecimal.valueOf(10000)));\r\n      dto.setActualAmount(dto.getActualAmount().divide(BigDecimal.valueOf(10000)));\r\n    }\r\n  }\r\n  for (MmCustomerTrackDto customerTrackDto : monthModelTargetResult.getResult()) {\r\n    Row row2 = sheet.createRow(2);\r\n    row2.createCell(0).setCellValue(customerTrackDto.getMonthTime());\r\n    row2.createCell(1).setCellValue(customerTrackDto.getClassifyName());\r\n    row2.createCell(2).setCellValue(customerTrackDto.getProductGroupName());\r\n    row2.createCell(3).setCellValue(customerTrackDto.getProductCode());\r\n    row2.createCell(4).setCellValue(customerTrackDto.getItemModel());\r\n    row2.createCell(5).setCellValue(customerTrackDto.getTargetNum());\r\n    row2.createCell(6).setCellValue(customerTrackDto.getTargetAmount().doubleValue());\r\n    row2.createCell(7).setCellValue(customerTrackDto.getActualNum());\r\n    row2.createCell(8).setCellValue(customerTrackDto.getActualAmount().doubleValue());\r\n    row2.createCell(9).setCellValue(customerTrackDto.getActualAmount()\r\n                                        .doubleValue() / customerTrackDto.getTargetAmount()\r\n        .doubleValue() * 100 + \"%\");\r\n  }\r\n  // 输出Excel文件\r\n  String fileName = new String(EXECL_TITLE.getBytes(), CHART_ISO);\r\n  response.reset();\r\n  response.setHeader(CONTENT_DISPOSTION, ATTACHMENT_FILENAME + fileName + XLSX);\r\n  response.setContentType(APPLICATION_MSEXCEL);\r\n  OutputStream output = response.getOutputStream();\r\n  wkb.write(output);\r\n  output.close();\r\n  wkb.close();\r\n}\r\n```\r\n\r\n```\r\n\u003cdubbo:reference interface=\"cn.gooday.ylh.service.salestarget.api.service.CusMonthModelTargetService\"\r\n                 id=\"cusMonthModelTargetService\" version=\"${jsh.dubbo.customer.order.version:1.0}\"/\u003e\r\n                 //消费者注入服务，要进行配置\r\n```\r\n\r\n```\r\n\u003cdubbo:service interface=\"cn.gooday.ylh.service.salestarget.api.service.CusMonthModelTargetService\"\r\n               ref=\"cusMonthModelTargetService\" version=\"${jsh.dubbo.provider.order.version:1.0}\"/\u003e\r\n```\r\n\r\n```\r\nList\u003cMmCustomerTrackDto\u003e list = cusMonthModelTargetMapper\r\n    .findCusMonthModelTarget(monthModelTrackParam);\r\n    //mapper,查询方式\r\n```\r\n\r\n```\r\nList\u003cMmCustomerTrackDto\u003e findCusMonthModelTarget(\r\n    @Param(\"param\") MonthModelTrackParam monthModelTrackParam);\r\n    //param，可进行引用，#{param.attr}\r\n    //可多种形式，mapper.xml中，可以foreach\r\n```\r\n\r\n```\r\n\u003cresultMap id=\"RM_TargetMonthModel\"\r\n           type=\"cn.gooday.ylh.service.salestarget.api.dto.MmCustomerTrackDto\"\u003e\r\n           //resultMap定义结果\r\n```\r\n\r\n##### 4.常用sql\r\n\r\n```\r\n//常见的sql条件\r\nsum( IFNULL( tmms.item_num, 0 )) AS item_num,\r\n\u003csql id=\"where_condition\"\u003e\r\n  \u003cwhere\u003e\r\n    and asd_.status != 2\r\n    \u003cif test=\"param.customerId !=null \"\u003e\r\n      AND tmms.customer_id = #{param.customerId}\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.memberId != null\"\u003e\r\n      AND tmms.member_id = #{param.memberId}\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.targetClassifyId != null \"\u003e\r\n      AND tmms.target_classify_id = #{param.targetClassifyId}\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.classifyName != null and param.classifyName != ''\"\u003e\r\n      and target_classify_.classify_name = #{param.classifyName}\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.classifyCode != null and param.classifyCode != ''\"\u003e\r\n      and target_classify_.classify_code = #{param.classifyCode}\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.startMonth != null and param.startMonth != ''\"\u003e\r\n      \u003c![CDATA[ and tmms.month_time \u003e= #{param.startMonth} ]]\u003e\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.endMonth != null and param.endMonth != ''\"\u003e\r\n      \u003c![CDATA[ and tmms.month_time \u003c= #{param.endMonth} ]]\u003e\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.productGroupName != null and param.productGroupName != ''\"\u003e\r\n      \u003c![CDATA[ AND tmms.product_group_name like CONCAT(\"%\",#{param.productGroupName},\"%\") ]]\u003e\r\n    \u003c/if\u003e\r\n    \u003cif test=\"param.itemNameAndCode != null and param.itemNameAndCode != ''\"\u003e\r\n      \u003c![CDATA[ AND\r\n    (tmms.product_code like CONCAT(\"%\",#{param.itemNameAndCode},\"%\")\r\n    or tmms.item_model like CONCAT(\"%\",#{param.itemNameAndCode},\"%\")\r\n    or tmms.item_name like CONCAT(\"%\",#{param.itemNameAndCode},\"%\"))]]\u003e\r\n    \u003c/if\u003e\r\n    //循环\r\n    \u003cif test=\"entity.skuIds != null and entity.skuIds.size()\u003e0\"\u003e\r\n      \u003c![CDATA[\r\n            AND a.sku_id  in\r\n          ]]\u003e\r\n      \u003cforeach collection=\"entity.skuIds\" item=\"skuId\"  open=\"(\" separator=\",\" close=\")\"\u003e\r\n        #{skuId}\r\n      \u003c/foreach\u003e\r\n    GROUP BY\r\n    tmms.member_id,\r\n    tmms.customer_id,\r\n    tmms.classify_code\r\n    limit #page.pageOffSet,#page.rows//sql分页\r\n  \u003c/where\u003e\r\n```\r\n\r\n```\r\n添加理货商的菜单：\r\n\r\ninsert\r\n\r\n\tinto\r\n\r\n\t\tsys_menu ( NAME,\r\n\r\n\t\turl,\r\n\r\n\t\ttype,\r\n\r\n\t\tbuss_type,\r\n\r\n\t\tpid,\r\n\r\n\t\t`status`,\r\n\r\n\t\tsort,\r\n\r\n\t\tapp_id ) select\r\n\r\n\t\t\t\"目标型号达成追踪\",\r\n\r\n\t\t\t\"/shopmanager/target-month-model-track/list\",\r\n\r\n\t\t\t1,\r\n\r\n\t\t\t1,\r\n\r\n\t\t\t1039,\r\n\r\n\t\t\t1,\r\n\r\n\t\t\t321,\r\n\r\n\t\t\t1;\r\n\r\n insert\r\n\r\n\tinto\r\n\r\n\t\tsys_permission ( CODE,\r\n\r\n\t\tNAME,\r\n\r\n\t\tSTATUS,\r\n\r\n\t\tsort,\r\n\r\n\t\tapp )\r\n\r\n\tvalues ( 'target-month-model-track',\r\n\r\n\t'目标型号达成追踪',\r\n\r\n\t1,\r\n\r\n\t22,\r\n\r\n\t'YLH' );\r\n\r\n insert\r\n\r\n\tinto\r\n\r\n\t\tsys_permission_menu ( permission_id,\r\n\r\n\t\tmenu_id ) select\r\n\r\n\t\t\t(\r\n\r\n\t\t\tselect\r\n\r\n\t\t\t\tid\r\n\r\n\t\t\tfrom\r\n\r\n\t\t\t\tsys_permission\r\n\r\n\t\t\twhere\r\n\r\n\t\t\t\t`name` = \"目标型号达成追踪\" ) permission_id,\r\n\r\n\t\t\tid\r\n\r\n\t\tfrom\r\n\r\n\t\t\tsys_menu\r\n\r\n\t\twhere\r\n\r\n\t\t\t`name` = \"目标型号达成追踪\";\r\n\r\n insert\r\n\r\n\tinto\r\n\r\n\t\tsys_permission_show_group_rela ( group_id,\r\n\r\n\t\tpermission_id ) select\r\n\r\n\t\t\t8,\r\n\r\n\t\t\tt.id\r\n\r\n\t\tfrom\r\n\r\n\t\t\tsys_permission t\r\n\r\n\t\twhere\r\n\r\n\t\t\tt.name = \"目标型号达成追踪\";\r\n\r\n 添加伞下店的菜单 insert\r\n\r\n\tinto\r\n\r\n\t\tsys_menu ( NAME,\r\n\r\n\t\turl,\r\n\r\n\t\ttype,\r\n\r\n\t\tbuss_type,\r\n\r\n\t\tpid,\r\n\r\n\t\t`status`,\r\n\r\n\t\tsort,\r\n\r\n\t\tapp_id ) select\r\n\r\n\t\t\t\"目标型号达成追踪\",\r\n\r\n\t\t\t\"/shopmanager/target-month-model-track-cus/list\",\r\n\r\n\t\t\t1,\r\n\r\n\t\t\t0,\r\n\r\n\t\t\t1073,\r\n\r\n\t\t\t1,\r\n\r\n\t\t\t541,\r\n\r\n\t\t\t1;\r\n\r\n```\r\n\r\n##### 5.redis操作-StringRedisTemplate\r\n\r\n```\r\nstringRedisTemplate.opsForValue().set(\"test\", \"100\",60*10,TimeUnit.SECONDS);//向redis里存入数据和设置缓存时间  \r\n```\r\n\r\n```\r\nstringRedisTemplate.boundValueOps(\"test\").increment(-1);//val做-1操作  \r\n```\r\n\r\n```\r\nstringRedisTemplate.opsForValue().get(\"test\")//根据key获取缓存中的val  \r\n```\r\n\r\n```\r\nstringRedisTemplate.boundValueOps(\"test\").increment(1);//val +1  \r\n```\r\n\r\n```\r\nstringRedisTemplate.getExpire(\"test\")//根据key获取过期时间  \r\n```\r\n\r\n```\r\nstringRedisTemplate.getExpire(\"test\",TimeUnit.SECONDS)//根据key获取过期时间并换算成指定单位  \r\n```\r\n\r\n```\r\nstringRedisTemplate.delete(\"test\");//根据key删除缓存  \r\n```\r\n\r\n```\r\nstringRedisTemplate.hasKey(\"546545\");//检查key是否存在，返回boolean值  \r\n```\r\n\r\n```\r\nstringRedisTemplate.opsForSet().add(\"red_123\", \"1\",\"2\",\"3\");//向指定key中存放set集合  \r\n```\r\n\r\n```\r\nstringRedisTemplate.expire(\"red_123\",1000 , TimeUnit.MILLISECONDS);//设置过期时间  \r\n```\r\n\r\n```\r\nstringRedisTemplate.opsForSet().isMember(\"red_123\", \"1\")//根据key查看集合中是否存在指定数据  \r\n```\r\n\r\n```\r\nstringRedisTemplate.opsForSet().members(\"red_123\");//根据key获取set集合  \r\n```\r\n\r\n\r\n\r\n#### 四、前端工程启动测试方法\r\n\r\n1. 启动相关前端项目\r\n\r\n   进入相关前端工程，git bash here\r\n\r\n   . app-run.sh\r\n\r\n   启动成功\r\n\r\n   问题：若出现需要登陆之后操作，则配置\r\n\r\n   ```\r\n   jsh.shiro.cache.key.prefix=ylh_cache_dev\r\n   jsh.shiro.session.key.prefix=ylh_session_dev\r\n   ```\r\n\r\n2. 浏览器访问 dev.yilihuo.com/index/login\r\n\r\n3. debug测试\r\n\r\n4. host配置\r\n\r\n   12.168.3.15     3bc1fda3.ngrok.io\r\n   127.0.0.1     dev.yilihuo.com\r\n\r\n#### 五、数据库相关地址记录\r\n\r\n服务器地址：12.168.3.71\r\n\r\n数据库：ylh_goods\r\n\r\n用户名：ylh_user\r\n\r\n密码：ylhuser991ui\r\n\r\n#### 六、表情况\r\n\r\n​\t表final_item_channel_group\r\n\r\n| 列名                | 注释             | 关联表                | 类型     | 长度 | 可为空 | 码值                                                         | 知识记录                                                     |\r\n| ------------------- | ---------------- | --------------------- | -------- | ---- | ------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\r\n| id                  | 主键             |                       | int      | 11   | 否     |                                                              | 1.spu：标准产品单位                                          |\r\n| member_id           | 用户memberId     | final_channel_member  | int      | 11   | 否     |                                                              | 2.sku：库存量单位                                            |\r\n| item_id             | 商品id           | final_channel_item    | int      | 11   | 否     |                                                              | 3.一个SKU可以对应多个SPU，简单的说： SPU就是一个iPhone6s, SKU就是银色iPhone6s、粉色iPhone6s |\r\n| type                | 类型             | final_channel_type    | int      | 2    | 否     | 类型1 产品库商品 2 总部推荐3 中心推荐4 理货商推荐5 主动引用的信息6 商家自建 | 4.海尔目前是1:1                                              |\r\n| target_id           | 展示终端         |                       | int      | 11   | 是     | 展示终端 1海尔2统帅3海尔/统帅                                |                                                              |\r\n| channel_group_id    | 频道分组ID       | final_channel_channel | int      | 11   | 是     |                                                              |                                                              |\r\n| channel_group_name  | 频道分组名称     |                       | varchar  | 255  | 是     |                                                              |                                                              |\r\n| channel_group_order | 分组顺序         |                       | int      | 6    | 是     |                                                              |                                                              |\r\n| start_time          | 活动频道开始时间 |                       | datetime |      | 是     |                                                              |                                                              |\r\n| end_time            | 活动频道结束时间 |                       | datetime |      | 是     |                                                              |                                                              |\r\n| create_time         | 创建日期         |                       | datetime |      | 否     |                                                              |                                                              |\r\n| update_time         | 修改日期         |                       | datetime |      | 是     |                                                              |                                                              |\r\n| create_user_id      | 创建人           |                       | int      | 11   | 是     |                                                              |                                                              |\r\n| update_user_id      | 修改人           |                       | int      | 11   | 是     |                                                              |                                                              |\r\n| version             | 版本控制         |                       | int      | 11   | 是     |                                                              |                                                              |\r\n\r\n​\t表final_item_list\r\n\r\n| 列名                    | 注释               | 关联表               | 类型     | 长度   | 可为空 | 码值                                                         | 知识记录 |\r\n| ----------------------- | ------------------ | -------------------- | -------- | ------ | ------ | ------------------------------------------------------------ | -------- |\r\n| id                      | 主键               |                      | int      | 11     | 否     |                                                              |          |\r\n| member_id               | 用户memberId       | final_channel_member | int      | 11     | 否     |                                                              |          |\r\n| item_id                 | 商品id             | final_channel_item   | int      | 11     | 否     |                                                              |          |\r\n| type                    | 类型               | final_channel_type   | int      | 11     | 否     | 类型 各种信息类型中级别 最高的 1 产品库2 总部推荐3 中心推荐4 理货商推荐5 主动引用的信息6 商家自建 |          |\r\n| member_from             | 来源人             |                      | int      | 11     | 是     | 如果是总部/中心推荐，那么为-1， 理货商推荐来源memberId       |          |\r\n| type_item               | 产品类型（spu）    |                      | int      | 11     | 是     | 类型1 产品库6 商家自建                                       |          |\r\n| brand_id                | 品牌id             |                      | int      | 11     | 是     |                                                              |          |\r\n| brand_en                | 品牌code           |                      | varchar  | 40     | 是     |                                                              |          |\r\n| brand_type_id           | 品牌类型           |                      | int      | 11     | 是     |                                                              |          |\r\n| brand_name              | 品牌名称           |                      | varchar  | 100    | 是     |                                                              |          |\r\n| cid                     | 商品类目id         |                      | int      | 11     | 是     |                                                              |          |\r\n| cid_name                | 商品类目名称       |                      | varchar  | 100    | 是     |                                                              |          |\r\n| product_group_code      | 产品组编码         |                      | varchar  | 100    | 是     |                                                              |          |\r\n| product_group_name      | 产品组名称         |                      | varchar  | 100    | 是     |                                                              |          |\r\n| item_unit               | 商品单位;计量单位  |                      | varchar  | 10     | 是     |                                                              |          |\r\n| type_item_sku           | 单品类型（sku）    |                      | int      | 2      | 是     | 类型1 产品库6 商家自建                                       |          |\r\n| item_sku_id             | 单品id             |                      | int      | 11     | 是     |                                                              |          |\r\n| product_code            | 编码               |                      | varchar  | 100    | 是     |                                                              |          |\r\n| item_model              | 型号               |                      | varchar  | 100    | 是     |                                                              |          |\r\n| type_member_rela        | 关联会员类型       |                      | int      | 2      | 是     | 2 总部推荐3 中心推荐4 理货商推荐5 主动引用的信息6 商家自建   |          |\r\n| target_id               | 展示终端           |                      | int      | 11     | 是     | 1海尔2统帅3海尔/统帅                                         |          |\r\n| item_status             | 商品状态           |                      | int      | 11     | 是     | 1-草稿,3-启用,30-停用,40-删除                                |          |\r\n| item_member_rela_id     | 关系管理信息表id   |                      | int      | 11     | 是     | 可能为null，null可以说明这个商品是推荐商品                   |          |\r\n| item_status_tv          | 云店上下架状态     |                      | int      | 11     | 是     | 10 上架 20 下架 null是无上下架权限                           |          |\r\n| item_status_wei         | 微商城上下架状态   |                      | int      | 11     | 是     | 10 上架 20 下架 null是无上下架权限                           |          |\r\n| item_status_ylh         | 易理货上下架状态   |                      | int      | 11     | 是     | 10 上架 20 下架 null是无上下架权限                           |          |\r\n| ylh_upload_time         | 易理货上架时间     |                      | datetime |        | 是     |                                                              |          |\r\n| type_info_part_basic    |                    |                      | int      | 2      | 是     | 类型1 产品库2 总部推荐3 中心推荐4 理货商推荐5 主动引用的信息 |          |\r\n| item_name               | 商品名称           |                      | varchar  | 200    | 是     |                                                              |          |\r\n| ad                      | 卖点               |                      | varchar  | 200    | 是     |                                                              |          |\r\n| type_picture            | 图片来源           |                      | int      | 2      | 是     | 类型1 产品库4 理货商推荐5 主动引用的信息6 商家自建           |          |\r\n| picture_url             | 商品主图           |                      | varchar  | 200    | 是     |                                                              |          |\r\n| type_price              | 定价来源           |                      | int      | 2      | 是     | 类型1 产品库2 总部推荐3 中心推荐4 理货商推荐5 主动引用的信息 |          |\r\n| tv_sales_price          | 智慧云店销售价     |                      | decimal  | (14,2) | 是     | 原tv_price                                                   |          |\r\n| tv_crossed_price        | 智慧云店划线价格   |                      | decimal  | (14,2) | 是     | 原crossed_price                                              |          |\r\n| wei_sales_price         | 微商城销售价       |                      | decimal  | (14,2) | 是     | 原wei_price                                                  |          |\r\n| wei_crossed_price       | 微商城划线价格     |                      | decimal  | (14,2) | 是     | 原crossed_price                                              |          |\r\n| item_update_time        | 商品的更新时间     |                      | datetime |        |        | （价格变化才变）                                             |          |\r\n| type_customize          |                    |                      | int      | 2      | 是     | 类型5 主动引用的信息6 商家自建                               |          |\r\n| sales_terminal          | 虚拟销量           |                      | int      | 11     | 是     |                                                              |          |\r\n| brokerage_price         | 佣金金额           |                      | decimal  | (14,2) | 是     |                                                              |          |\r\n| promtion_rate           | 分销佣金比率       |                      | decimal  | (3,2)  | 是     |                                                              |          |\r\n| item_label_ids          | 商品标签id         |                      | varchar  | 2000   | 是     | 用‘，’隔开，前面后面都有\",\",例如 ,1,2,',                     |          |\r\n| item_label_names        | 商品标签名称       |                      | varchar  | 4000   | 是     | 用‘，’隔开，前面后面都有\"\",\"\",例如 ,1,2,',                   |          |\r\n| item_classify_ids       | 商品的易理货分类id |                      | varchar  | 2000   | 是     | 用‘，’隔开，前面后面都有\"\",\"\",例如 ,1,2,',                   |          |\r\n| item_classify_names     | 商品的易理货分类   |                      | varchar  | 4000   | 是     | 用‘，’隔开，前面后面都有\"\",\"\",例如 ,1,2,',                   |          |\r\n| industry_control_switch | 授权控制开关       |                      | int      | 2      | 是     | 1 开启  其他 不管                                            |          |\r\n| cy_code                 | 产业code           |                      | varchar  | 20     | 是     |                                                              |          |\r\n| gm_code                 | 中心code           |                      | varchar  | 10     | 是     |                                                              |          |\r\n| create_time             | 创建日期           |                      | datetime |        |        |                                                              |          |\r\n| update_time             | 修改日期           |                      | datetime |        |        |                                                              |          |\r\n| create_user_id          | 创建人             |                      | int      | 11     | 是     |                                                              |          |\r\n| update_user_id          | 修改人             |                      | int      | 11     | 是     |                                                              |          |\r\n| version                 |                    |                      | int      | 11     | 是     |                                                              |          |\r\n\r\nselect * from target_classify; #目标分类\r\nselect * from actual_sales_details where order_id= 655 and `type` =2;//实际销售表\r\nselect * from target_classify_setting;\r\nselect * from target_month_sales ;\r\nselect * from target_year_sales;\r\nselect * from target_log;\r\nselect * from target_month_model_sales;//目标型号月追踪表\r\nselect * from target_month_main_push_goods_result;\r\nselect * from target_month_model_sales_item;\r\n\r\n select * from member_cy;  #产业表\r\n\r\n select * from member_gm;  #中心\r\n\r\n```\r\n#产品组名称查询\r\nselect \r\n a.product_group_name \r\n from \r\n item_plat_product_group a\r\n left join item i on a.product_group_code = i.product_group_code\r\n left join item_sku s on i.id = s.id\r\n where \r\n  a.industry_code='ABA' \r\n  and a.industry_name='洗衣机'\r\n  and s.id = '2000178';\r\n```\r\n\r\n\r\n\r\n#### 七、账号以及相关地址\r\n\r\ngit/svn账户\r\n\r\n薛乐乐(lele.xue@dhc.com.cn)，登录用户名为：xuelele，登录密码为：S@7P8i$vVUJgNP$hOXIC\r\n\r\ngit库：http://12.168.3.18:9001/#/q/status:open\r\n\r\n巨商汇开发平台：http://12.168.3.17/\r\n\r\n生产网址：http://yilihuo.com/\r\n\r\n预生产网址：http://pre.yilihuo.com/\r\n\r\n测试网址：https://dev.yilihuo.com/ \r\n\r\n配host：\r\n\r\n#巨商汇host配置\r\n12.168.3.15     3bc1fda3.ngrok.io\r\n12.168.3.15     dev.yilihuo.com\r\n\r\n监控平台日志：\r\n\r\n生产环境：http://monitor.yilihuo.com/login/index;JSESSIONID=ylh_session_prod_99ce4fcf7a2e43729a44d24d9885379e\r\n\r\n测试环境：\r\n\r\nhttp://12.168.3.17:8095/login/index;JSESSIONID=shiro_session_monitor_8df033fa999b461a9627d1330dc1d249\r\n\r\n预生产环境：\r\n\r\nhttp://premonitor.yilihuo.com/login/index;JSESSIONID=ylh_session_pre_22572eb3f3bd441fb20d4327876179b0\r\n\r\n测试账号：\r\n\r\nylhtest1/123qwe ----买家\r\nylhtest/123qwe -----卖家\r\n\r\n手机app\r\n\r\n\u003chttp://dev.yilihuo.com/v2/app/\u003e\r\n\r\n\u003chttp://pre-m.yilihuo.com/#/\u003e\r\n\r\n\r\n\r\nDEV环境数据库账号密码 ：\r\n\r\n注：该表格为dev环境数据库账号， 其中ylh_admin账号拥有数据修改权限，但不分配表结构修改权限；ylh_工程名 则为相应工程的数据库账号，用于本地连接dev库调试。\r\n\r\n| 数据库账号      | 数据库密码       |\r\n| --------------- | ---------------- |\r\n| ylh_admin       | ylh_admin331     |\r\n| ylh_cloud_goods | jshylhcloudgoods |\r\n| ylh_base        | jshylhbase       |\r\n| ylh_campaign    | jshylhcampaign   |\r\n| ylh_ecm         | jshylhecm        |\r\n| ylh_fund        | jshylhfund       |\r\n| ylh_goods       | jshylhgoods      |\r\n| ylh_notice      | jshylhnotice     |\r\n| ylh_openapi     | jshylhopenapi    |\r\n| ylh_order       | jshylhorder      |\r\n| ylh_price       | jshylhprice      |\r\n| ylh_user        | ylhuser991ui     |\r\n| ylh_unipay      | jshylhunipay     |\r\n| ylh_interface   | jshylhinterface  |\r\n\r\n ","cover":"","link":"jsh.html","preview":"\u003cp\u003eJSH系统工程简介以及相关常用逻辑方法功能\u003c/p\u003e\n","title":"JSH系统工程简介以及相关常用逻辑方法功能"},{"content":"---\r\n\r\n- We must not allow the clock and the calendar to blind us to the fact that each moment is a miracle and a mystery.\r\n\r\n  我们不能让时钟或月历，掩饰每一刻都是奇迹且很神祕这个事实。 \r\n\r\n- 如果你想要和别人制造羁绊，就要承受流泪的风险 \r\n\r\n- 大概世间所有美丽的东西，都需要全心全意的去呵护 \r\n\r\n- 即使冒着被伤害的风险，也愿意为了照顾好她，用尽全力 \r\n\r\n- 彼此需要，成为彼此唯一，偶尔的小脾气刺伤了你，也会想要悉心呵护她 ","cover":"","link":"1.html","preview":"\u003cp\u003e每一天我都想，有你的陪伴，你走进我的生命里，感谢命运\u003c/p\u003e\n","title":"2018.08.16"}]